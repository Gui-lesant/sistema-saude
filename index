<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema Unidades de Sa√∫de - Completo</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #2563eb;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --whatsapp: #25d366;
            --maps: #4285f4;
            --email: #ea4335;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: var(--primary);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }
        
        .controls {
            padding: 1.5rem;
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }
        
        .search-box {
            margin-bottom: 1rem;
        }
        
        .search-box input {
            width: 100%;
            padding: 15px 25px;
            border: 2px solid #ddd;
            border-radius: 25px;
            font-size: 1rem;
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            padding: 1.5rem;
            background: white;
        }
        
        .stat-card {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: var(--primary);
        }
        
        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            background: var(--primary);
            color: white;
            font-weight: 600;
            font-size: 1rem;
        }
        
        .table-container {
            overflow-x: auto;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            min-width: 1000px;
        }
        
        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        th {
            background: #f8f9fa;
            font-weight: 600;
            position: sticky;
            top: 0;
            cursor: pointer;
        }
        
        th:hover {
            background: #e9ecef;
        }
        
        tr:hover {
            background: #f8f9fa;
        }
        
        .action-btn {
            padding: 8px 15px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            color: white;
            font-size: 0.8rem;
            margin: 2px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }
        
        .btn-whatsapp { background: var(--whatsapp); }
        .btn-maps { background: var(--maps); }
        .btn-call { background: var(--success); }
        .btn-email { background: var(--email); }
        
        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .badge-success { background: #d1fae5; color: #065f46; }
        .badge-danger { background: #fee2e2; color: #dc2626; }
        
        .loading {
            padding: 3rem;
            text-align: center;
            color: #666;
            font-size: 1.1rem;
        }
        
        .error {
            background: #fee2e2;
            color: #dc2626;
            padding: 1.5rem;
            margin: 1rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .success {
            background: #d1fae5;
            color: #065f46;
            padding: 1rem;
            margin: 1rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .contact-actions {
            display: flex;
            gap: 5px;
            flex-wrap: wrap;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-hospital"></i> Sistema Unidades de Sa√∫de</h1>
            <p>Gest√£o completa de unidades e contatos</p>
        </div>
        
        <div class="controls">
            <div class="search-box">
                <input type="text" id="searchInput" placeholder="üîç Buscar unidades, gerentes, telefones, endere√ßos...">
            </div>
            <div style="text-align: center;">
                <button class="btn" onclick="carregarDados()">
                    <i class="fas fa-sync"></i> Carregar Dados da Planilha
                </button>
            </div>
        </div>
        
        <div id="stats" class="stats" style="display: none;">
            <div class="stat-card">
                <div class="stat-number" id="totalUnidades">0</div>
                <div>Unidades</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="unidadesAtivas">0</div>
                <div>Vacinas Ativas</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="unidadesComContato">0</div>
                <div>Com Contato</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalProfissionais">0</div>
                <div>Profissionais</div>
            </div>
        </div>
        
        <div id="loading" class="loading">
            <h3>üöÄ Sistema Pronto</h3>
            <p>Clique em "Carregar Dados da Planilha" para iniciar</p>
        </div>
        
        <div id="error" class="error" style="display: none;"></div>
        <div id="success" class="success" style="display: none;"></div>
        
        <div id="tabelaContainer" style="display: none;">
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th onclick="ordenarTabela(0)">Unidade</th>
                            <th onclick="ordenarTabela(1)">Gerente</th>
                            <th onclick="ordenarTabela(2)">Enfermeiro</th>
                            <th onclick="ordenarTabela(3)">T√©c. Enfermagem</th>
                            <th onclick="ordenarTabela(4)">M√©dico</th>
                            <th onclick="ordenarTabela(5)">Telefone</th>
                            <th onclick="ordenarTabela(6)">Endere√ßo</th>
                            <th onclick="ordenarTabela(7)">Sala Vacina</th>
                            <th>A√ß√µes</th>
                        </tr>
                    </thead>
                    <tbody id="tabelaBody"></tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        const PLANILHA_ID = '1QTPypA8lmlqeSveShPBI4HY9up6cOUcfulGDAyrP_BQ';
        let dadosOriginais = [];
        let dadosFiltrados = [];
        let ordenacao = { coluna: 0, direcao: 'asc' };
        
        async function carregarDados() {
            try {
                mostrarLoading('üåê Conectando com a planilha...');
                document.getElementById('error').style.display = 'none';
                
                const url = `https://docs.google.com/spreadsheets/d/${PLANILHA_ID}/export?format=csv`;
                const response = await fetch(url);
                
                if (!response.ok) {
                    throw new Error(`Erro ${response.status}: N√£o foi poss√≠vel acessar a planilha`);
                }
                
                const csv = await response.text();
                processarDados(csv);
                
            } catch (error) {
                mostrarErro('Erro ao carregar: ' + error.message);
                mostrarLoading(false);
            }
        }
        
        function processarDados(csv) {
            try {
                const dados = parseCSV(csv);
                
                if (dados.length === 0) {
                    throw new Error('Nenhum dado encontrado na planilha');
                }
                
                dadosOriginais = dados;
                dadosFiltrados = [...dados];
                
                atualizarEstatisticas(dados);
                renderizarTabela(dados);
                configurarBusca();
                
                mostrarSucesso(`‚úÖ ${dados.length} unidades carregadas com sucesso!`);
                mostrarLoading(false);
                
            } catch (error) {
                mostrarErro('Erro ao processar dados: ' + error.message);
                mostrarLoading(false);
            }
        }
        
        function parseCSV(csv) {
            const linhas = csv.split('\n').filter(linha => linha.trim());
            if (linhas.length < 2) return [];
            
            const cabecalhos = linhas[0].split(',').map(h => h.replace(/^"|"$/g, '').trim());
            const dados = [];
            
            for (let i = 1; i < linhas.length; i++) {
                const linha = linhas[i];
                if (!linha.trim()) continue;
                
                const valores = [];
                let valorAtual = '';
                let dentroDeAspas = false;
                
                for (let char of linha) {
                    if (char === '"') {
                        dentroDeAspas = !dentroDeAspas;
                    } else if (char === ',' && !dentroDeAspas) {
                        valores.push(valorAtual.replace(/^"|"$/g, ''));
                        valorAtual = '';
                    } else {
                        valorAtual += char;
                    }
                }
                valores.push(valorAtual.replace(/^"|"$/g, ''));
                
                const registro = {};
                cabecalhos.forEach((cabecalho, index) => {
                    registro[cabecalho] = valores[index] || '';
                });
                
                if (registro.UNIDADE && registro.UNIDADE.trim()) {
                    dados.push(registro);
                }
            }
            
            return dados;
        }
        
        function atualizarEstatisticas(dados) {
            const totalUnidades = dados.length;
            const unidadesAtivas = dados.filter(d => 
                d['SALA DE VACINA ATIVA'] && d['SALA DE VACINA ATIVA'].toUpperCase() === 'SIM'
            ).length;
            const unidadesComContato = dados.filter(d => 
                d.TELEFONE && d.TELEFONE.trim()
            ).length;
            
            const totalProfissionais = dados.reduce((total, unidade) => {
                return total + 
                    (parseInt(unidade.ENFERMEIRO) || 0) +
                    (parseInt(unidade['TEC. ENFERMAGEM']) || 0) +
                    (parseInt(unidade.MEDICO) || 0);
            }, 0);
            
            document.getElementById('totalUnidades').textContent = totalUnidades;
            document.getElementById('unidadesAtivas').textContent = unidadesAtivas;
            document.getElementById('unidadesComContato').textContent = unidadesComContato;
            document.getElementById('totalProfissionais').textContent = totalProfissionais;
            
            document.getElementById('stats').style.display = 'grid';
        }
        
        function renderizarTabela(dados) {
            const tbody = document.getElementById('tabelaBody');
            
            if (dados.length === 0) {
                tbody.innerHTML = '<tr><td colspan="9" style="text-align: center;">Nenhum dado encontrado</td></tr>';
                return;
            }
            
            tbody.innerHTML = dados.map(registro => {
                const unidade = registro.UNIDADE || 'N/A';
                const gerente = registro.GERENTE || 'N/A';
                const enfermeiro = registro.ENFERMEIRO || '0';
                const tecEnfermagem = registro['TEC. ENFERMAGEM'] || '0';
                const medico = registro.MEDICO || '0';
                const telefone = registro.TELEFONE || '';
                const endereco = registro.ENDERECO || registro.ENDERE√áO || 'N/A';
                const salaVacina = registro['SALA DE VACINA ATIVA'] || '';
                const email = registro.EMAIL || '';
                
                const temWhatsapp = telefone && telefone.replace(/\D/g, '').length >= 10;
                const temMaps = endereco && endereco !== 'N/A';
                const temTelefone = telefone && telefone.length > 5;
                const temEmail = email && email.includes('@');
                
                let badgeVacina = 'badge-danger';
                let textoVacina = 'N/A';
                
                if (salaVacina.toUpperCase() === 'SIM') {
                    badgeVacina = 'badge-success';
                    textoVacina = 'ATIVA';
                } else if (salaVacina.toUpperCase() === 'N√ÉO' || salaVacina.toUpperCase() === 'NAO') {
                    badgeVacina = 'badge-danger';
                    textoVacina = 'INATIVA';
                }
                
                return `
                    <tr>
                        <td><strong>${escapeHTML(unidade)}</strong></td>
                        <td>${escapeHTML(gerente)}</td>
                        <td>${enfermeiro}</td>
                        <td>${tecEnfermagem}</td>
                        <td>${medico}</td>
                        <td>${formatarTelefone(telefone)}</td>
                        <td>${escapeHTML(endereco)}</td>
                        <td><span class="badge ${badgeVacina}">${textoVacina}</span></td>
                        <td>
                            <div class="contact-actions">
                                ${temWhatsapp ? `
                                    <a href="https://wa.me/55${telefone.replace(/\D/g, '')}" 
                                       target="_blank" 
                                       class="action-btn btn-whatsapp"
                                       title="WhatsApp">
                                        <i class="fab fa-whatsapp"></i>
                                    </a>
                                ` : ''}
                                ${temMaps ? `
                                    <a href="https://maps.google.com/?q=${encodeURIComponent(endereco)}" 
                                       target="_blank" 
                                       class="action-btn btn-maps"
                                       title="Google Maps">
                                        <i class="fas fa-map-marker-alt"></i>
                                    </a>
                                ` : ''}
                                ${temTelefone ? `
                                    <a href="tel:${telefone}" 
                                       class="action-btn btn-call"
                                       title="Ligar">
                                        <i class="fas fa-phone"></i>
                                    </a>
                                ` : ''}
                                ${temEmail ? `
                                    <a href="mailto:${email}" 
                                       class="action-btn btn-email"
                                       title="E-mail">
                                        <i class="fas fa-envelope"></i>
                                    </a>
                                ` : ''}
                            </div>
                        </td>
                    </tr>
                `;
            }).join('');
            
            document.getElementById('tabelaContainer').style.display = 'block';
        }
        
        function configurarBusca() {
            document.getElementById('searchInput').addEventListener('input', function(e) {
                const termo = e.target.value.toLowerCase();
                
                if (!termo) {
                    dadosFiltrados = [...dadosOriginais];
                } else {
                    dadosFiltrados = dadosOriginais.filter(registro => 
                        Object.values(registro).some(valor => 
                            valor && valor.toString().toLowerCase().includes(termo)
                        )
                    );
                }
                
                atualizarEstatisticas(dadosFiltrados);
                renderizarTabela(dadosFiltrados);
            });
        }
        
        function ordenarTabela(colIndex) {
            if (ordenacao.coluna === colIndex) {
                ordenacao.direcao = ordenacao.direcao === 'asc' ? 'desc' : 'asc';
            } else {
                ordenacao.coluna = colIndex;
                ordenacao.direcao = 'asc';
            }
            
            dadosFiltrados.sort((a, b) => {
                const aVal = Object.values(a)[colIndex] || '';
                const bVal = Object.values(b)[colIndex] || '';
                
                if (ordenacao.direcao === 'asc') {
                    return aVal.toString().localeCompare(bVal.toString(), undefined, { numeric: true });
                } else {
                    return bVal.toString().localeCompare(aVal.toString(), undefined, { numeric: true });
                }
            });
            
            renderizarTabela(dadosFiltrados);
        }
        
        function formatarTelefone(telefone) {
            if (!telefone) return 'N/A';
            const numeros = telefone.replace(/\D/g, '');
            if (numeros.length === 11) {
                return numeros.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
            } else if (numeros.length === 10) {
                return numeros.replace(/(\d{2})(\d{4})(\d{4})/, '($1) $2-$3');
            }
            return telefone;
        }
        
        function escapeHTML(texto) {
            if (!texto) return 'N/A';
            const div = document.createElement('div');
            div.textContent = texto;
            return div.innerHTML;
        }
        
        function mostrarLoading(mensagem) {
            const loading = document.getElementById('loading');
            if (mensagem === false) {
                loading.style.display = 'none';
            } else {
                loading.style.display = 'block';
                loading.innerHTML = `<h3>${mensagem}</h3>`;
            }
        }
        
        function mostrarErro(mensagem) {
            document.getElementById('error').textContent = mensagem;
            document.getElementById('error').style.display = 'block';
        }
        
        function mostrarSucesso(mensagem) {
            document.getElementById('success').textContent = mensagem;
            document.getElementById('success').style.display = 'block';
            setTimeout(() => {
                document.getElementById('success').style.display = 'none';
            }, 5000);
        }
        
        // Carregar automaticamente ap√≥s 2 segundos
        setTimeout(() => {
            carregarDados();
        }, 2000);
    </script>
</body>
</html>
